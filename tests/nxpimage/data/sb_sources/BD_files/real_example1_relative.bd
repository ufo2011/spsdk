options {
    flags = 0x8; // bd file format: 0x8 encrypted + signed (always 0x8)
    buildNumber = 0x1;
    productVersion = "1.00.00";
    componentVersion = "1.00.00";
    secureBinaryVersion = "2.1";
}
sources {
     myImage = "../../sb_sources/output_images/application_signed.bin";          // Put location of Signed or UnSigned image input
     key_store = "../../sb_sources/key_store/key_store_rt5xx.bin";
     fcb_block = "../../sb_sources/input_images/rt500_quad_flash_fcb.bin";
}
keyblob(0){
    (
        start = 0x08008000,
        end = 0x087983ff,                         // Increased to 128kB = start + 0x20000, last bits bust be 0x3ff to have the AES enabled, bit ADE = 1

        key = "000102030405060708090A0B0C0D0E0F",
        counter = "0123456789ABCDEF",
        noByteSwap = 1                            // RT500: noByteSwap = 1, RT600 = 0 (default)
    )
}
keyblob(1){
    (
        start = 0x08798400,
        end =   0x087987fd,                       // Just 1kB, with Descriptor bit ADE = 0 (bit1 = 0), Encryption Disabled

        key = "000102030405060708090A0B0C0D0E0F", // Random user defined key
        counter = "0123456789ABCDEF",             // AES seed (used internally)
        noByteSwap = 1
    )
}
keyblob(2){
    (
        start = 0x08798800,
        end =   0x08798bfd,                       // Just 1kB, with Descriptor bit ADE = 0 (bit1 = 0), Encryption Disabled
        key = "000102030405060708090A0B0C0D0E0F",
        counter = "0123456789ABCDEF",
        noByteSwap = 1
    )
}
keyblob(3){
    (
        start = 0x08798c00,
        end = 0x08798ffd,                        // Just 1kB, with Descriptor bit ADE = 0 (bit1 = 0), Encryption Disabled
        key = "000102030405060708090A0B0C0D0E0F",
        counter = "0123456789ABCDEF",
        noByteSwap = 1
    )
}
section (0) {
    load 0xc0000001 > 0x10C000;  // Memory config word for QSPI Flash (like IS25WPxxx): 0xc0000001, Octal SPI: 0xc0403006
    enable @0x9 0x10C000;
    //erase 0x8008000..0x8040000;  // Erase 256kB block at first avoid erasing the keystore location
    //erase 0x8008000..0x8A00000;  // Erase 256kB block at first avoid erasing the keystore location
      erase 0x8008000..0x8300000;  // Erase 256kB block at first avoid erasing the keystore location



    //load 0xf000000f > 0x10d000;
	//enable @0x9 0x10d000;       // Load new FCB by boot ROM code

    load fcb_block > 0x08000400;  // Load FCB block manually (workaround)
    load key_store > 0x08000800;  // Key Store will be copied to external Flash, offset 0x800

    encrypt(0){
      load myImage > 0x08008000;  // 0x08001000
    }

    keywrap (0) {
        load {{0102030405060708090a0b0c0d0e0f00}} > 0x08000000; // Equal to OTFAD_KEK, uses same for all now, used internally by device for keyblob encryption.
    }
    keywrap (1) {
        load {{0102030405060708090a0b0c0d0e0f00}} > 0x08000040;
    }
    keywrap (2) {
        load {{0102030405060708090a0b0c0d0e0f00}} > 0x08000080;
    }
    keywrap (3) {
        load {{0102030405060708090a0b0c0d0e0f00}} > 0x080000C0;
    }
}
