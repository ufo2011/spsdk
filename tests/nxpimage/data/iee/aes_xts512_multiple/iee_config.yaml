# Copyright 2023-2024 NXP
#
# SPDX-License-Identifier: BSD-3-Clause
# ===========  IEE converted config.  ===========
# ----------------------------------------------------------------------------------------------------
#                                         == Basic Settings ==
# ----------------------------------------------------------------------------------------------------
family: rt117x  # [Required], MCU family name; Possible options:['rt116x', 'rt117x', 'mimxrt1189']
output_folder: iee_output # [Required], IEE output directory; Path to directory where the IEE output will be generated
output_name: encrypted.bin # [Optional], Output binary image filename; Filename of the output image containing keyblobs and encrypted data blobs without file extension (.bin will be appended)
keyblob_name: iee_keyblob.bin # [Optional], Keyblob filename; Filename of the keyblob without file extension (.bin will be appended)
encrypted_name: encrypted_blobs.bin # [Optional], Encrypted name; filename of the encrypted datablobs without file extension (.bin will be appended)
# ----------------------------------------------------------------------------------------------------
#                                          == IEE Settings ==
# ----------------------------------------------------------------------------------------------------
keyblob_address: '0x30000000' # [Required], Base address of the IEE keyblob; Should be aligned to 1 kB
data_blobs: # [Optional], Data blobs list; List of all data blobs that will be encrypted
  - data: evkmimxrt1176_SDRAM_dcd.bin  # [Required], Binary data blob; Path to binary file with plain text data to be encrypted
    address: '0x30000400' # [Optional], Data blob address, it doesn't have to be specified for S-REC
  - data: evkmimxrt1170_iled_blinky_cm7_QSPI_FLASH_bootable_nopadding.bin  # [Required], Binary data blob; Path to binary file with plain text data to be encrypted
    address: '0x30009000' # [Optional], Data blob address, it doesn't have to be specified for S-REC
  - data: evkmimxrt1170_iled_blinky_cm7_QSPI_FLASH.s19  # [Required], Binary data blob; Path to binary file with plain text data to be encrypted
  - data: evkmimxrt1170_iled_blinky_cm7_QSPI_FLASH_bootable_nopadding.bin  # [Required], Binary data blob; Path to binary file with plain text data to be encrypted
    address: '0x30018000' # [Optional], Data blob address, it doesn't have to be specified for S-REC
  - data: evkmimxrt1170_iled_blinky_cm7_QSPI_FLASH_bootable_nopadding.bin  # [Required], Binary data blob; Path to binary file with plain text data to be encrypted
    address: '0x30025000' # [Optional], Data blob address, it doesn't have to be specified for S-REC
# ----------------------------------------------------------------------------------------------------
#                                     == Keyblob Encryption Key ==
# ----------------------------------------------------------------------------------------------------
ibkek1: '0x000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F' # [Required], IBKEK1 AES-XTS 256-bit key; IBKEK1 AES-XTS key for keyblob encryption
ibkek2: '0x202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F' # [Required], IBKEK2 AES-XTS 256-bit key; IBKEK2 AES-XTS key for keyblob encryption
# ----------------------------------------------------------------------------------------------------
#                                 == List of Key Blobs used by IEE ==
# ----------------------------------------------------------------------------------------------------
key_blobs: # [Required], The list of definition of individual key blobs including plain data. Add other array items as you need and device allows
  - region_lock: false  # [Optional], Keyblob lock attribute; Determines if the ROM will lock the IEE configuration to prevent later changes.
    aes_mode: AesXTS # [Required], AES mode, Encryption bypass, AES-XTS, AES-CTR (with or without address binding) or AES-CTR keystream only; Possible options:['Bypass', 'AesXTS', 'AesCTRWAddress', 'AesCTRWOAddress', 'AesCTRkeystream']
    key_size: CTR256XTS512 # [Required], AES key size, 128/256 for AES-CTR or 256/512 for AES-XTS; AES mode, AES-XTS or AES-CTR; Possible options:['CTR256XTS512', 'CTR128XTS256']
    page_offset: 0 # [Optional], Page offset, IEE_REG0PO value
    key1: '0x000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F' # [Required], AES-XTS key1 / AES-CTR key; AES key for the key blob, size depends on key_size
    key2: '0x202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F' # [Required], AES-CTR Counter value or AES-XTS key2; AES key for the key blob, size depends on key_size
    start_address: '0x30001000' # [Required], Start address of key blob data, it should be aligned to 1 KB (1024 B)
    end_address: '0x30008000' # [Required], End address of key blob data, it should be aligned to 1 KB (1024 B)
  - region_lock: false  # [Optional], Keyblob lock attribute; Determines if the ROM will lock the IEE configuration to prevent later changes.
    aes_mode: AesXTS # [Required], AES mode, Encryption bypass, AES-XTS, AES-CTR (with or without address binding) or AES-CTR keystream only; Possible options:['Bypass', 'AesXTS', 'AesCTRWAddress', 'AesCTRWOAddress', 'AesCTRkeystream']
    key_size: CTR256XTS512 # [Required], AES key size, 128/256 for AES-CTR or 256/512 for AES-XTS; AES mode, AES-XTS or AES-CTR; Possible options:['CTR256XTS512', 'CTR128XTS256']
    page_offset: 0 # [Optional], Page offset, IEE_REG0PO value
    key1: '0x000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F' # [Required], AES-XTS key1 / AES-CTR key; AES key for the key blob, size depends on key_size
    key2: '0x202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F' # [Required], AES-CTR Counter value or AES-XTS key2; AES key for the key blob, size depends on key_size
    start_address: '0x30008000' # [Required], Start address of key blob data, it should be aligned to 1 KB (1024 B)
    end_address: '0x30019000' # [Required], End address of key blob data, it should be aligned to 1 KB (1024 B)
